@using VideoGameStore.Data.Enums;
@model IEnumerable<VideoGame>

@{
    ViewData["Title"] = "List of video games";
}

@*Html Code*@
<div class="row">
    @foreach(var item in Model)
    {
        <div class="col-md-4 col-xs-6 border-primary mb-3">
            <div class="card mb-3" style="max-width: 540px;">
                <div class="row g-0">
                    <div class="col-md-12">
                        <div class="card-header text-white bg-info">
                            <p class="card-text">
                                <h5 class="card-title">
                                    @item.Title
                                    @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                                    {
                                        <a class="text-white float-right" asp-action="Edit" asp-route-id="@item.Id"><i class="bi bi-pencil-square"></i></a>
                                    }
                                </h5>
                            </p>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <img src="@item.ImageURL" width="100%" alt="@item.Title">
                    </div>
                    <div class="col-md-6">
                        <div class="card-body">
                            <p class="card-text">
                                @if (item.Description.Length > 150)
                                {
                                    @(item.Description.Substring(0, 150) + "...");
                                }
                                else
                                {
                                    @item.Description;
                                }
                            </p>
                            <p class="card-text"><b>Genre: </b>@item.GameGenre</p>
                            <p class="card-text"><b>Age Rating: </b>
                                @*Using the EnumHelper Class to show the display name of the age rating instead
                                of the enum value.*@
                                @foreach (var value in @EnumHelper<GameAgeRating>.GetValues(GameAgeRating.RP))
                                {
                                    if (value == item.GameAgeRating)
                                    {
                                        var description = EnumHelper<GameAgeRating>.GetDisplayValue(value);
                                        @Html.DisplayFor(e => description );
                                    }
                                }
                            </p>
                            <p class="card-text"><b>Release Date: </b>@item.ReleaseDate.ToString("dd MMM yy")</p>
                            <p class="card-text ">
                                <b>Status: </b>
                                @if (DateTime.Now >= item.ReleaseDate)
                                {
                                    <span class="badge bg-success text-white">AVAILABLE</span>
                                }
                                else
                                {
                                    <span class="badge bg-primary text-white">UPCOMING</span>
                                }
                            </p>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="card-footer ">
                            <p class="card-text">
                                <a class="btn btn-outline-info float-right" asp-action="Details" asp-route-id="@item.Id">
                                    <i class="bi bi-eye-fill"></i> Show Details</a>
                                @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                                {
                                    <a class="btn btn-outline-info float-right" asp-action="Edit" asp-route-id="@item.Id">
                                        <i class="bi bi-pencil-square"></i>Edit</a>
                                }
                                @if (DateTime.Now >= item.ReleaseDate)
                                {
                                    <a class="btn btn-success text-white" asp-controller="Orders"
                                       asp-action="AddItemToShoppingCart" asp-route-id="@item.Id">
                                       <i class="bi bi-cart-plus"></i> Add to Cart (Price @item.Price.ToString("c"))
                                    </a>
                                }
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@await Html.PartialAsync("_CreateItem", "VideoGames") 